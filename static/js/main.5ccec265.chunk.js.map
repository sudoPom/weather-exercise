{"version":3,"sources":["components/Search.js","components/Weather.js","index.js"],"names":["Search","action","method","type","placeholder","name","search","window","location","city","URLSearchParams","get","Weather","useState","weather","updateWeather","useEffect","axios","getApiCall","then","res","i","prevArray","data","list","description","cityName","process","count","weatherForecast","map","day","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAYeA,EAXA,kBACb,uBAAMC,OAAQ,qBAAqBC,OAAS,MAA5C,UACE,uBACMC,KAAO,OACPC,YAAc,0BACdC,KAAO,SAEb,wBAAQF,KAAO,SAAf,wBCHIG,EAAYC,OAAOC,SAAnBF,OACJG,EAAO,IAAIC,gBAAgBJ,GAAQK,IAAI,QA2B5BC,EAxBC,WACd,MAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,IAAMN,IAAIO,EAAWT,IAAOU,MAAK,SAAAC,GAC/B,IADuC,IAAD,WAC9BC,GACNN,GAAc,SAAAO,GAAS,4BAAQA,GAAR,CAAoBF,EAAIG,KAAKC,KAAKH,GAAGP,QAAQ,GAAGW,kBADjEJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,EAAnBA,QAIT,IAEH,IAAIH,EAAa,SAAAQ,GAAQ,oEAA2DA,EAA3D,wBAAmFC,qCACxGC,EAAQ,EACNC,EAAkBf,EAAQgB,KAAI,SAACC,GAAD,OAAS,6BAAqBA,GAAVH,QAExD,OACE,sBAAK,cAAY,UAAUI,UAAU,UAArC,UACA,cAAC,EAAD,IADA,iCAGwBvB,EAHxB,QAGkC,mCAAMoB,EAAN,WCvBtCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5ccec265.chunk.js","sourcesContent":["\nconst Search = () => (\n  <form action =\"/weather-exercise/\" method = \"get\">\n    <input\n          type = \"text\"\n          placeholder = \"Search for City Weather\"\n          name = \"city\"\n    />\n    <button type = \"submit\">Search</button>\n  </form>\n);\n\nexport default Search;\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../styling/weather.scss';\r\nimport Search from './Search';\r\n\r\nconst { search }  = window.location;\r\nlet city = new URLSearchParams(search).get('city')\r\n\r\n\r\nconst Weather = () => {\r\n  const [weather, updateWeather] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(getApiCall(city)).then(res => {\r\n      for(let i = 0; i < 5; i++){\r\n        updateWeather(prevArray => [...prevArray, (res.data.list[i].weather[0].description)])\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  var getApiCall = cityName => `https://api.openweathermap.org/data/2.5/forecast/?q=${cityName}&cnt=5&APPID=${process.env.REACT_APP_WEATHER_API_KEY}`;\r\n  var count = 1\r\n  const weatherForecast = weather.map((day) => <li key = {count++}>{day}</li>);\r\n\r\n  return (\r\n    <div data-testid=\"weather\" className=\"weather\">\r\n    <Search />\r\n      Weather:\r\n      The 5 day forcast of {city} is: <ul> {weatherForecast} </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styling/index.scss';\nimport Weather from './components/Weather';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Weather />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}